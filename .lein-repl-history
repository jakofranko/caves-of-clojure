(require '[lanterna.terminal :as t])
(def term (t/get-terminal :swing))
(t/start term)
(t/put-character term \H)
(t/put-character term \i)
(t/put-character term \!)
(t/move-cursor term 40 12)
(t/put-character term \@)
(t/move-cursor term 40 12)
(t/move-cursor term 0 6)
(t/set-fg-color term :red)
(t/put-string term "Red")
(t/move-cursor term 0 7)
(t/set-fg-color term :blue)
(t/put-string term "Blue")
(t/move-cursor term 0 8)
(t/set-fg-color term :black)
(t/set-bg-color term :green)
(t/put-string term "Green")
(t/get-key term)
(t/get-key-blocking term)
(t/stop term)
(def terminal-size (ref [0 0]))
(defn handle-resize [cols rows]
  (dosync (ref-set terminal-size [cols rows])))
(def term (t/get-terminal :swing {:resize-listener handle-resize}))
(t/start term)
@terminal-size
(binding [*ns* (or (find-ns 'caves.entities.player) (find-ns 'user))] (load-string "(defn check-tile
  \"Check that the tile at the destination passes the given predicate.\"
  [world dest pred]
  (pred (get-tile-kind world dest)))"))
(check-tile (random-world) (random-coordinates))
(check-tile (random-world) [0 0] #{:floor})
(. System exit 0)
